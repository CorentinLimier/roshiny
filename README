ROshiny a été développé avec Play version 2.5.3 et activator

Pour lancer l'application en mode développeur, exécutez le script 
./scripts/run-dev.sh PORT
le paramètre PORT est par défaut à 9000

Pour compiler l'application, exécutez le script 
./scripts/compile.sh

Pour déployer l'application, copiez les répertoires ./scripts ./database et ./target
! ATTENTION !
Ne copiez pas database/roshiny.db si vous ne souhaitez pas écraser votre base de données existante

Pour lancer l'application en mode développeur : 
- Compilez d'abord l'application
- puis exécutez le script 
./scripts/run-prod.sh PORT
le paramètre PORT est par défaut à 9000

Pour créer une nouvelle base de données compatible avec roshiny:
- Créez une base vide avec sqlite3
- Exécutez avec sqlite3 le script ./scripts/initDatabase.sql
- Le mot de passe de la page admin de l'application sera vide par défaut

=======================================================================================================================


README ORIGINAL (Play Framework) : 

This is your new Play application
=================================

This file will be packaged with your application when using `activator dist`.

There are several demonstration files available in this template.

Controllers
===========

- HomeController.java:

  Shows how to handle simple HTTP requests.

- AsyncController.java:

  Shows how to do asynchronous programming when handling a request.

- CountController.java:

  Shows how to inject a component into a controller and use the component when
  handling requests.

Components
==========

- Module.java:

  Shows how to use Guice to bind all the components needed by your application.

- Counter.java:

  An example of a component that contains state, in this case a simple counter.

- ApplicationTimer.java:

  An example of a component that starts when the application starts and stops
  when the application stops.

Filters
=======

- Filters.java:

  Creates the list of HTTP filters used by your application.

- ExampleFilter.java

  A simple filter that adds a header to every response.
